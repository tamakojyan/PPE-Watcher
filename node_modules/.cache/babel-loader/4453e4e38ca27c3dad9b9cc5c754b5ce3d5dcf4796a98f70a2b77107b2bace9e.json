{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tamak\\\\Desktop\\\\Workspace\\\\ppe-watcher\\\\src\\\\components\\\\layout\\\\TopBar.tsx\",\n  _s = $RefreshSig$();\nimport { AppBar, IconButton, Toolbar, Typography, Tooltip } from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport LightModeIcon from '@mui/icons-material/LightMode';\nimport { useThemeControl } from '../../App';\nimport { useTheme } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TopBar({\n  onMenuClick,\n  isMobile,\n  title\n}) {\n  _s();\n  const {\n    toggleTheme\n  } = useThemeControl();\n  const theme = useTheme();\n  const isDark = theme.palette.mode === 'dark';\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"fixed\",\n    color: \"primary\",\n    enableColorOnDark: true,\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      sx: {\n        gap: 1\n      },\n      children: [isMobile && /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: 'Menu',\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          color: \"inherit\",\n          onClick: onMenuClick,\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          variant: 'h6',\n          flexGrow: 1\n        },\n        noWrap: true,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"../../assets/images/Logo.png\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), title !== null && title !== void 0 ? title : 'PPE-Watcher']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: isDark ? 'Switch to light' : 'Switch to dark',\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          onClick: toggleTheme,\n          \"aria-label\": \"toggle theme\",\n          children: isDark ? /*#__PURE__*/_jsxDEV(LightModeIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 23\n          }, this) : /*#__PURE__*/_jsxDEV(DarkModeIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(TopBar, \"HxV+lU0pALQ2tqgYwKCDmpaXTKI=\", false, function () {\n  return [useThemeControl, useTheme];\n});\n_c = TopBar;\nvar _c;\n$RefreshReg$(_c, \"TopBar\");","map":{"version":3,"names":["AppBar","IconButton","Toolbar","Typography","Tooltip","MenuIcon","DarkModeIcon","LightModeIcon","useThemeControl","useTheme","jsxDEV","_jsxDEV","TopBar","onMenuClick","isMobile","title","_s","toggleTheme","theme","isDark","palette","mode","position","color","enableColorOnDark","children","sx","gap","edge","onClick","fileName","_jsxFileName","lineNumber","columnNumber","variant","flexGrow","noWrap","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/tamak/Desktop/Workspace/ppe-watcher/src/components/layout/TopBar.tsx"],"sourcesContent":["import { AppBar, IconButton, Toolbar, Typography, Box, Tooltip } from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport LightModeIcon from '@mui/icons-material/LightMode';\nimport { useThemeControl } from '../../App';\nimport { useTheme } from '@mui/material/styles';\n\ntype Props = {\n  onMenuClick: () => void;\n  title?: string;\n  isMobile: boolean;\n};\nexport default function TopBar({ onMenuClick, isMobile, title }: Props): React.ReactElement {\n  const { toggleTheme } = useThemeControl();\n  const theme = useTheme();\n  const isDark = theme.palette.mode === 'dark';\n  return (\n    <AppBar position=\"fixed\" color=\"primary\" enableColorOnDark>\n      <Toolbar sx={{ gap: 1 }}>\n        {isMobile && (\n          <Tooltip title={'Menu'}>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={onMenuClick}>\n              <MenuIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n        <Typography sx={{ variant: 'h6', flexGrow: 1 }} noWrap>\n          <img src=\"../../assets/images/Logo.png\" alt=\"\" />\n          {title ?? 'PPE-Watcher'}\n        </Typography>\n        <Tooltip title={isDark ? 'Switch to light' : 'Switch to dark'}>\n          <IconButton color=\"inherit\" onClick={toggleTheme} aria-label=\"toggle theme\">\n            {isDark ? <LightModeIcon /> : <DarkModeIcon />}\n          </IconButton>\n        </Tooltip>\n      </Toolbar>\n    </AppBar>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}