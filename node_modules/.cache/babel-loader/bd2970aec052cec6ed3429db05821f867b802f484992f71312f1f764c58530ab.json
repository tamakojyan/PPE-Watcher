{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tamak\\\\Desktop\\\\Workspace\\\\ppe-watcher\\\\src\\\\components\\\\layout\\\\MainNav.tsx\",\n  _s = $RefreshSig$();\nimport { AppBar, Toolbar, Tabs, Tab } from '@mui/material';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { drawerWidth } from './SideNav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = [{\n  key: 'dashboard',\n  label: 'Dashboard',\n  defaultPath: '/overview'\n}, {\n  key: 'history',\n  label: 'History',\n  defaultPath: '/violations'\n}, {\n  key: 'settings',\n  label: 'Settings',\n  defaultPath: '/alerts-settings'\n}];\n// key 对应的默认跳转路径\nconst keyToDefault = {\n  dashboard: '/overview',\n  history: '/violations',\n  settings: '/alerts-settings'\n};\n\n// 根据 URL 推导主菜单\nfunction deriveMainKey(pathname) {\n  var _pathname$split$;\n  const first = (_pathname$split$ = pathname.split('/')[1]) !== null && _pathname$split$ !== void 0 ? _pathname$split$ : '';\n  if (['violations', 'archive', 'snapshots', 'reports'].includes(first)) return 'history';\n  if (['alerts-settings', 'contacts', 'sender', 'security'].includes(first)) return 'settings';\n  return 'dashboard';\n}\n\n// Utility: derive main menu key based on current URL path\n\nexport default function MainNav({\n  isMobile\n}) {\n  _s();\n  const navigate = useNavigate();\n  const {\n    pathname\n  } = useLocation();\n  const mainKey = deriveMainKey(pathname);\n  const activeKey = React.useMemo(() => deriveMainKey(pathname), [pathname]);\n\n  // 点击 Tab 跳转\n  const handleChange = (_, nextKey) => {\n    navigate(keyToDefault[nextKey]);\n  };\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"fixed\",\n    color: \"default\",\n    elevation: 0,\n    sx: {\n      top: {\n        xs: 56,\n        sm: 64\n      },\n      zIndex: t => t.zIndex.appBar - 1\n    },\n    children: [' ', /*#__PURE__*/_jsxDEV(Toolbar, {\n      sx: {\n        p: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        value: idx,\n        onChange: handleChange,\n        sx: {\n          ml: 1,\n          pl: {\n            md: `${drawerWidth - 40}px`\n          }\n        },\n        children: Main.map(m => /*#__PURE__*/_jsxDEV(Tab, {\n          label: m.label,\n          sx: {\n            mx: 5\n          }\n        }, m.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(MainNav, \"EpJvg8ttzlt6+09XD2fqt79xTaY=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = MainNav;\nvar _c;\n$RefreshReg$(_c, \"MainNav\");","map":{"version":3,"names":["AppBar","Toolbar","Tabs","Tab","useNavigate","useLocation","drawerWidth","jsxDEV","_jsxDEV","Main","key","label","defaultPath","keyToDefault","dashboard","history","settings","deriveMainKey","pathname","_pathname$split$","first","split","includes","MainNav","isMobile","_s","navigate","mainKey","activeKey","React","useMemo","handleChange","_","nextKey","position","color","elevation","sx","top","xs","sm","zIndex","t","appBar","children","p","value","idx","onChange","ml","pl","md","map","m","mx","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tamak/Desktop/Workspace/ppe-watcher/src/components/layout/MainNav.tsx"],"sourcesContent":["import * as react from 'react';\nimport { AppBar, Toolbar, Tabs, Tab, useTheme, useMediaQuery } from '@mui/material';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { drawerWidth } from './SideNav';\n\nconst Main = [\n  { key: 'dashboard', label: 'Dashboard', defaultPath: '/overview' },\n  { key: 'history', label: 'History', defaultPath: '/violations' },\n  { key: 'settings', label: 'Settings', defaultPath: '/alerts-settings' },\n] as const;\n\ntype MainKey = (typeof Main)[number]['key'];\n\n// key 对应的默认跳转路径\nconst keyToDefault: Record<MainKey, string> = {\n  dashboard: '/overview',\n  history: '/violations',\n  settings: '/alerts-settings',\n};\n\n// 根据 URL 推导主菜单\nfunction deriveMainKey(pathname: string): MainKey {\n  const first = pathname.split('/')[1] ?? '';\n  if (['violations', 'archive', 'snapshots', 'reports'].includes(first)) return 'history';\n  if (['alerts-settings', 'contacts', 'sender', 'security'].includes(first)) return 'settings';\n  return 'dashboard';\n}\n\n// Utility: derive main menu key based on current URL path\n\ntype Props = { isMobile: boolean };\n\nexport default function MainNav({ isMobile }: Props): React.ReactElement | null {\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n  const mainKey = deriveMainKey(pathname);\n  const activeKey = React.useMemo<MainKey>(() => deriveMainKey(pathname), [pathname]);\n\n  // 点击 Tab 跳转\n  const handleChange = (_: React.SyntheticEvent, nextKey: MainKey) => {\n    navigate(keyToDefault[nextKey]);\n  };\n\n  return (\n    <AppBar\n      position=\"fixed\"\n      color=\"default\"\n      elevation={0}\n      sx={{\n        top: { xs: 56, sm: 64 },\n        zIndex: (t) => t.zIndex.appBar - 1,\n      }}\n    >\n      {' '}\n      <Toolbar sx={{ p: 0 }}>\n        <Tabs\n          value={idx}\n          onChange={handleChange}\n          sx={{ ml: 1, pl: { md: `${drawerWidth - 40}px` } }}\n        >\n          {Main.map((m) => (\n            <Tab key={m.key} label={m.label} sx={{ mx: 5 }} />\n          ))}\n        </Tabs>\n      </Toolbar>\n    </AppBar>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}