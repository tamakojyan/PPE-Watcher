{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport telemetryContext from \"../context.js\";\nimport { getWindowStorageItem, setWindowStorageItem } from \"./window-storage.js\";\nfunction generateId(length) {\n  let result = '';\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  const charactersLength = characters.length;\n  let counter = 0;\n  while (counter < length) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    counter += 1;\n  }\n  return result;\n}\nfunction pick(obj, keys) {\n  return keys.reduce((acc, key) => {\n    acc[key] = obj[key];\n    return acc;\n  }, {});\n}\nconst getBrowserFingerprint = typeof window === 'undefined' || process.env.NODE_ENV === 'test' ? () => undefined : async () => {\n  const fingerprintLCKey = 'fingerprint';\n  try {\n    const existingFingerprint = getWindowStorageItem('localStorage', fingerprintLCKey);\n    if (existingFingerprint) {\n      return JSON.parse(existingFingerprint);\n    }\n    const FingerprintJS = await import('@fingerprintjs/fingerprintjs');\n    const fp = await FingerprintJS.load({\n      monitoring: false\n    });\n    const fpResult = await fp.get();\n    const components = _extends({}, fpResult.components);\n    delete components.cookiesEnabled;\n    const fullHash = FingerprintJS.hashComponents(components);\n    const coreHash = FingerprintJS.hashComponents(_extends({}, pick(components, ['fonts', 'audio', 'languages', 'deviceMemory', 'timezone', 'sessionStorage', 'localStorage', 'indexedDB', 'openDatabase', 'platform', 'canvas', 'vendor', 'vendorFlavors', 'colorGamut', 'forcedColors', 'monochrome', 'contrast', 'reducedMotion', 'math', 'videoCard', 'architecture'])));\n    const result = {\n      fullHash,\n      coreHash\n    };\n    setWindowStorageItem('localStorage', fingerprintLCKey, JSON.stringify(result));\n    return result;\n  } catch (_) {\n    return null;\n  }\n};\nfunction getAnonymousId() {\n  const localStorageKey = 'anonymous_id';\n  const existingAnonymousId = getWindowStorageItem('localStorage', localStorageKey);\n  if (existingAnonymousId) {\n    return existingAnonymousId;\n  }\n  const generated = `anid_${generateId(32)}`;\n  if (setWindowStorageItem('localStorage', localStorageKey, generated)) {\n    return generated;\n  }\n  return '';\n}\nfunction getSessionId() {\n  const localStorageKey = 'session_id';\n  const existingSessionId = getWindowStorageItem('sessionStorage', localStorageKey);\n  if (existingSessionId) {\n    return existingSessionId;\n  }\n  const generated = `sesid_${generateId(32)}`;\n  if (setWindowStorageItem('sessionStorage', localStorageKey, generated)) {\n    return generated;\n  }\n  return `sestp_${generateId(32)}`;\n}\nasync function getTelemetryContext() {\n  telemetryContext.traits.sessionId = getSessionId();\n\n  // Initialize the context if it hasn't been initialized yet\n  // (e.g. postinstall not run)\n  if (!telemetryContext.config.isInitialized) {\n    telemetryContext.traits.anonymousId = getAnonymousId();\n    telemetryContext.config.isInitialized = true;\n  }\n  if (!telemetryContext.traits.fingerprint) {\n    telemetryContext.traits.fingerprint = await getBrowserFingerprint();\n  }\n  return telemetryContext;\n}\nexport default getTelemetryContext;","map":{"version":3,"names":["_extends","telemetryContext","getWindowStorageItem","setWindowStorageItem","generateId","length","result","characters","charactersLength","counter","charAt","Math","floor","random","pick","obj","keys","reduce","acc","key","getBrowserFingerprint","window","process","env","NODE_ENV","undefined","fingerprintLCKey","existingFingerprint","JSON","parse","FingerprintJS","fp","load","monitoring","fpResult","get","components","cookiesEnabled","fullHash","hashComponents","coreHash","stringify","_","getAnonymousId","localStorageKey","existingAnonymousId","generated","getSessionId","existingSessionId","getTelemetryContext","traits","sessionId","config","isInitialized","anonymousId","fingerprint"],"sources":["C:/Users/tamak/Desktop/Workspace/ppe-watcher/node_modules/@mui/x-telemetry/esm/runtime/get-context.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport telemetryContext from \"../context.js\";\nimport { getWindowStorageItem, setWindowStorageItem } from \"./window-storage.js\";\nfunction generateId(length) {\n  let result = '';\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  const charactersLength = characters.length;\n  let counter = 0;\n  while (counter < length) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    counter += 1;\n  }\n  return result;\n}\nfunction pick(obj, keys) {\n  return keys.reduce((acc, key) => {\n    acc[key] = obj[key];\n    return acc;\n  }, {});\n}\nconst getBrowserFingerprint = typeof window === 'undefined' || process.env.NODE_ENV === 'test' ? () => undefined : async () => {\n  const fingerprintLCKey = 'fingerprint';\n  try {\n    const existingFingerprint = getWindowStorageItem('localStorage', fingerprintLCKey);\n    if (existingFingerprint) {\n      return JSON.parse(existingFingerprint);\n    }\n    const FingerprintJS = await import('@fingerprintjs/fingerprintjs');\n    const fp = await FingerprintJS.load({\n      monitoring: false\n    });\n    const fpResult = await fp.get();\n    const components = _extends({}, fpResult.components);\n    delete components.cookiesEnabled;\n    const fullHash = FingerprintJS.hashComponents(components);\n    const coreHash = FingerprintJS.hashComponents(_extends({}, pick(components, ['fonts', 'audio', 'languages', 'deviceMemory', 'timezone', 'sessionStorage', 'localStorage', 'indexedDB', 'openDatabase', 'platform', 'canvas', 'vendor', 'vendorFlavors', 'colorGamut', 'forcedColors', 'monochrome', 'contrast', 'reducedMotion', 'math', 'videoCard', 'architecture'])));\n    const result = {\n      fullHash,\n      coreHash\n    };\n    setWindowStorageItem('localStorage', fingerprintLCKey, JSON.stringify(result));\n    return result;\n  } catch (_) {\n    return null;\n  }\n};\nfunction getAnonymousId() {\n  const localStorageKey = 'anonymous_id';\n  const existingAnonymousId = getWindowStorageItem('localStorage', localStorageKey);\n  if (existingAnonymousId) {\n    return existingAnonymousId;\n  }\n  const generated = `anid_${generateId(32)}`;\n  if (setWindowStorageItem('localStorage', localStorageKey, generated)) {\n    return generated;\n  }\n  return '';\n}\nfunction getSessionId() {\n  const localStorageKey = 'session_id';\n  const existingSessionId = getWindowStorageItem('sessionStorage', localStorageKey);\n  if (existingSessionId) {\n    return existingSessionId;\n  }\n  const generated = `sesid_${generateId(32)}`;\n  if (setWindowStorageItem('sessionStorage', localStorageKey, generated)) {\n    return generated;\n  }\n  return `sestp_${generateId(32)}`;\n}\nasync function getTelemetryContext() {\n  telemetryContext.traits.sessionId = getSessionId();\n\n  // Initialize the context if it hasn't been initialized yet\n  // (e.g. postinstall not run)\n  if (!telemetryContext.config.isInitialized) {\n    telemetryContext.traits.anonymousId = getAnonymousId();\n    telemetryContext.config.isInitialized = true;\n  }\n  if (!telemetryContext.traits.fingerprint) {\n    telemetryContext.traits.fingerprint = await getBrowserFingerprint();\n  }\n  return telemetryContext;\n}\nexport default getTelemetryContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}