{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tamak\\\\Desktop\\\\Workspace\\\\ppe-watcher\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport router from './app/routes';\nimport { RouterProvider } from 'react-router-dom';\nimport { ThemeProvider } from '@mui/material/styles';\nimport { CssBaseline, createTheme } from '@mui/material';\nimport { useState, useMemo } from 'react';\nimport { createContext, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeControlContext = /*#__PURE__*/createContext(null);\nexport const useThemeControl = () => {\n  _s();\n  const ctx = useContext(ThemeControlContext);\n  if (!ctx) throw new Error('useThemeControl must be used  within ThemeControlContext.provider ');\n  return ctx;\n};\n_s(useThemeControl, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\nc;\nexport default function App() {\n  _s2();\n  const [isDark, setIsDark] = useState(false);\n  const theme = useMemo(() => createTheme({\n    palette: {\n      mode: isDark ? 'dark' : 'light'\n    }\n  }), [isDark]);\n  const toggleTheme = () => setIsDark(p => !p);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeControlContext.Provider, {\n      value: {\n        toggleTheme\n      },\n      children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n        router: router\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"3QnYow8HNJgTEWIRAt4R5bQBwTY=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["router","RouterProvider","ThemeProvider","CssBaseline","createTheme","useState","useMemo","createContext","useContext","jsxDEV","_jsxDEV","ThemeControlContext","useThemeControl","_s","ctx","Error","c","App","_s2","isDark","setIsDark","theme","palette","mode","toggleTheme","p","children","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","_c","$RefreshReg$"],"sources":["C:/Users/tamak/Desktop/Workspace/ppe-watcher/src/App.tsx"],"sourcesContent":["import router from './app/routes';\nimport { RouterProvider } from 'react-router-dom';\nimport { ThemeProvider } from '@mui/material/styles';\nimport { CssBaseline, createTheme, useMediaQuery } from '@mui/material';\nimport { useState, useMemo } from 'react';\nimport { createContext, useContext } from 'react';\n\nexport const ThemeControlContext = createContext<{ toggleTheme: () => void } | null>(null);\nexport const useThemeControl = () => {\n  const ctx = useContext(ThemeControlContext);\n  if (!ctx) throw new Error('useThemeControl must be used  within ThemeControlContext.provider ');\n  return ctx;\n};\nc;\nexport default function App() {\n  const [isDark, setIsDark] = useState(false);\n  const theme = useMemo(\n    () => createTheme({ palette: { mode: isDark ? 'dark' : 'light' } }),\n    [isDark]\n  );\n  const toggleTheme = () => setIsDark((p) => !p);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <ThemeControlContext.Provider value={{ toggleTheme }}>\n        <RouterProvider router={router} />\n      </ThemeControlContext.Provider>\n    </ThemeProvider>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,MAAM,MAAM,cAAc;AACjC,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,aAAa,QAAQ,sBAAsB;AACpD,SAASC,WAAW,EAAEC,WAAW,QAAuB,eAAe;AACvE,SAASC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AACzC,SAASC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,OAAO,MAAMC,mBAAmB,gBAAGJ,aAAa,CAAqC,IAAI,CAAC;AAC1F,OAAO,MAAMK,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAMC,GAAG,GAAGN,UAAU,CAACG,mBAAmB,CAAC;EAC3C,IAAI,CAACG,GAAG,EAAE,MAAM,IAAIC,KAAK,CAAC,oEAAoE,CAAC;EAC/F,OAAOD,GAAG;AACZ,CAAC;AAACD,EAAA,CAJWD,eAAe;AAK5BI,CAAC;AACD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,GAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMgB,KAAK,GAAGf,OAAO,CACnB,MAAMF,WAAW,CAAC;IAAEkB,OAAO,EAAE;MAAEC,IAAI,EAAEJ,MAAM,GAAG,MAAM,GAAG;IAAQ;EAAE,CAAC,CAAC,EACnE,CAACA,MAAM,CACT,CAAC;EACD,MAAMK,WAAW,GAAGA,CAAA,KAAMJ,SAAS,CAAEK,CAAC,IAAK,CAACA,CAAC,CAAC;EAE9C,oBACEf,OAAA,CAACR,aAAa;IAACmB,KAAK,EAAEA,KAAM;IAAAK,QAAA,gBAC1BhB,OAAA,CAACP,WAAW;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACfpB,OAAA,CAACC,mBAAmB,CAACoB,QAAQ;MAACC,KAAK,EAAE;QAAER;MAAY,CAAE;MAAAE,QAAA,eACnDhB,OAAA,CAACT,cAAc;QAACD,MAAM,EAAEA;MAAO;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEpB;AAACZ,GAAA,CAhBuBD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}