{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { usePickerAdapter, usePickerTranslations } from '@mui/x-date-pickers/hooks';\nimport { useApplyDefaultValuesToDateTimeValidationProps } from '@mui/x-date-pickers/internals';\nimport { getRangeFieldValueManager, rangeValueManager } from \"../internals/utils/valueManagers.js\";\nimport { validateDateTimeRange } from \"../validation/index.js\";\nimport { formatRange } from \"../internals/utils/date-utils.js\";\nexport function useDateTimeRangeManager(parameters = {}) {\n  const {\n    enableAccessibleFieldDOMStructure = true,\n    dateSeparator\n  } = parameters;\n  return React.useMemo(() => ({\n    valueType: 'date-time',\n    validator: validateDateTimeRange,\n    internal_valueManager: rangeValueManager,\n    internal_fieldValueManager: getRangeFieldValueManager({\n      dateSeparator\n    }),\n    internal_enableAccessibleFieldDOMStructure: enableAccessibleFieldDOMStructure,\n    internal_useApplyDefaultValuesToFieldInternalProps: useApplyDefaultValuesToDateTimeRangeFieldInternalProps,\n    internal_useOpenPickerButtonAriaLabel: useOpenPickerButtonAriaLabel\n  }), [enableAccessibleFieldDOMStructure, dateSeparator]);\n}\nfunction useOpenPickerButtonAriaLabel(value) {\n  const adapter = usePickerAdapter();\n  const translations = usePickerTranslations();\n  return React.useMemo(() => {\n    return translations.openRangePickerDialogue(formatRange(adapter, value, 'fullDate'));\n  }, [value, translations, adapter]);\n}\nfunction useApplyDefaultValuesToDateTimeRangeFieldInternalProps(internalProps) {\n  const adapter = usePickerAdapter();\n  const validationProps = useApplyDefaultValuesToDateTimeValidationProps(internalProps);\n  const ampm = React.useMemo(() => internalProps.ampm ?? adapter.is12HourCycleInCurrentLocale(), [internalProps.ampm, adapter]);\n  return React.useMemo(() => _extends({}, internalProps, validationProps, {\n    format: internalProps.format ?? (ampm ? adapter.formats.keyboardDateTime12h : adapter.formats.keyboardDateTime24h)\n  }), [internalProps, validationProps, ampm, adapter]);\n}","map":{"version":3,"names":["_extends","React","usePickerAdapter","usePickerTranslations","useApplyDefaultValuesToDateTimeValidationProps","getRangeFieldValueManager","rangeValueManager","validateDateTimeRange","formatRange","useDateTimeRangeManager","parameters","enableAccessibleFieldDOMStructure","dateSeparator","useMemo","valueType","validator","internal_valueManager","internal_fieldValueManager","internal_enableAccessibleFieldDOMStructure","internal_useApplyDefaultValuesToFieldInternalProps","useApplyDefaultValuesToDateTimeRangeFieldInternalProps","internal_useOpenPickerButtonAriaLabel","useOpenPickerButtonAriaLabel","value","adapter","translations","openRangePickerDialogue","internalProps","validationProps","ampm","is12HourCycleInCurrentLocale","format","formats","keyboardDateTime12h","keyboardDateTime24h"],"sources":["C:/Users/tamak/Desktop/Workspace/ppe-watcher/node_modules/@mui/x-date-pickers-pro/esm/managers/useDateTimeRangeManager.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { usePickerAdapter, usePickerTranslations } from '@mui/x-date-pickers/hooks';\nimport { useApplyDefaultValuesToDateTimeValidationProps } from '@mui/x-date-pickers/internals';\nimport { getRangeFieldValueManager, rangeValueManager } from \"../internals/utils/valueManagers.js\";\nimport { validateDateTimeRange } from \"../validation/index.js\";\nimport { formatRange } from \"../internals/utils/date-utils.js\";\nexport function useDateTimeRangeManager(parameters = {}) {\n  const {\n    enableAccessibleFieldDOMStructure = true,\n    dateSeparator\n  } = parameters;\n  return React.useMemo(() => ({\n    valueType: 'date-time',\n    validator: validateDateTimeRange,\n    internal_valueManager: rangeValueManager,\n    internal_fieldValueManager: getRangeFieldValueManager({\n      dateSeparator\n    }),\n    internal_enableAccessibleFieldDOMStructure: enableAccessibleFieldDOMStructure,\n    internal_useApplyDefaultValuesToFieldInternalProps: useApplyDefaultValuesToDateTimeRangeFieldInternalProps,\n    internal_useOpenPickerButtonAriaLabel: useOpenPickerButtonAriaLabel\n  }), [enableAccessibleFieldDOMStructure, dateSeparator]);\n}\nfunction useOpenPickerButtonAriaLabel(value) {\n  const adapter = usePickerAdapter();\n  const translations = usePickerTranslations();\n  return React.useMemo(() => {\n    return translations.openRangePickerDialogue(formatRange(adapter, value, 'fullDate'));\n  }, [value, translations, adapter]);\n}\nfunction useApplyDefaultValuesToDateTimeRangeFieldInternalProps(internalProps) {\n  const adapter = usePickerAdapter();\n  const validationProps = useApplyDefaultValuesToDateTimeValidationProps(internalProps);\n  const ampm = React.useMemo(() => internalProps.ampm ?? adapter.is12HourCycleInCurrentLocale(), [internalProps.ampm, adapter]);\n  return React.useMemo(() => _extends({}, internalProps, validationProps, {\n    format: internalProps.format ?? (ampm ? adapter.formats.keyboardDateTime12h : adapter.formats.keyboardDateTime24h)\n  }), [internalProps, validationProps, ampm, adapter]);\n}"],"mappings":"AAAA,YAAY;;AAEZ,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,gBAAgB,EAAEC,qBAAqB,QAAQ,2BAA2B;AACnF,SAASC,8CAA8C,QAAQ,+BAA+B;AAC9F,SAASC,yBAAyB,EAAEC,iBAAiB,QAAQ,qCAAqC;AAClG,SAASC,qBAAqB,QAAQ,wBAAwB;AAC9D,SAASC,WAAW,QAAQ,kCAAkC;AAC9D,OAAO,SAASC,uBAAuBA,CAACC,UAAU,GAAG,CAAC,CAAC,EAAE;EACvD,MAAM;IACJC,iCAAiC,GAAG,IAAI;IACxCC;EACF,CAAC,GAAGF,UAAU;EACd,OAAOT,KAAK,CAACY,OAAO,CAAC,OAAO;IAC1BC,SAAS,EAAE,WAAW;IACtBC,SAAS,EAAER,qBAAqB;IAChCS,qBAAqB,EAAEV,iBAAiB;IACxCW,0BAA0B,EAAEZ,yBAAyB,CAAC;MACpDO;IACF,CAAC,CAAC;IACFM,0CAA0C,EAAEP,iCAAiC;IAC7EQ,kDAAkD,EAAEC,sDAAsD;IAC1GC,qCAAqC,EAAEC;EACzC,CAAC,CAAC,EAAE,CAACX,iCAAiC,EAAEC,aAAa,CAAC,CAAC;AACzD;AACA,SAASU,4BAA4BA,CAACC,KAAK,EAAE;EAC3C,MAAMC,OAAO,GAAGtB,gBAAgB,CAAC,CAAC;EAClC,MAAMuB,YAAY,GAAGtB,qBAAqB,CAAC,CAAC;EAC5C,OAAOF,KAAK,CAACY,OAAO,CAAC,MAAM;IACzB,OAAOY,YAAY,CAACC,uBAAuB,CAAClB,WAAW,CAACgB,OAAO,EAAED,KAAK,EAAE,UAAU,CAAC,CAAC;EACtF,CAAC,EAAE,CAACA,KAAK,EAAEE,YAAY,EAAED,OAAO,CAAC,CAAC;AACpC;AACA,SAASJ,sDAAsDA,CAACO,aAAa,EAAE;EAC7E,MAAMH,OAAO,GAAGtB,gBAAgB,CAAC,CAAC;EAClC,MAAM0B,eAAe,GAAGxB,8CAA8C,CAACuB,aAAa,CAAC;EACrF,MAAME,IAAI,GAAG5B,KAAK,CAACY,OAAO,CAAC,MAAMc,aAAa,CAACE,IAAI,IAAIL,OAAO,CAACM,4BAA4B,CAAC,CAAC,EAAE,CAACH,aAAa,CAACE,IAAI,EAAEL,OAAO,CAAC,CAAC;EAC7H,OAAOvB,KAAK,CAACY,OAAO,CAAC,MAAMb,QAAQ,CAAC,CAAC,CAAC,EAAE2B,aAAa,EAAEC,eAAe,EAAE;IACtEG,MAAM,EAAEJ,aAAa,CAACI,MAAM,KAAKF,IAAI,GAAGL,OAAO,CAACQ,OAAO,CAACC,mBAAmB,GAAGT,OAAO,CAACQ,OAAO,CAACE,mBAAmB;EACnH,CAAC,CAAC,EAAE,CAACP,aAAa,EAAEC,eAAe,EAAEC,IAAI,EAAEL,OAAO,CAAC,CAAC;AACtD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}