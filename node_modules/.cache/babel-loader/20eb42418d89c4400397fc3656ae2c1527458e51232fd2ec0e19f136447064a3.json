{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { usePickerAdapter, usePickerTranslations } from '@mui/x-date-pickers/hooks';\nimport { useApplyDefaultValuesToDateValidationProps } from '@mui/x-date-pickers/internals';\nimport { getRangeFieldValueManager, rangeValueManager } from \"../internals/utils/valueManagers.js\";\nimport { validateDateRange } from \"../validation/index.js\";\nimport { formatRange } from \"../internals/utils/date-utils.js\";\nexport function useDateRangeManager(parameters = {}) {\n  const {\n    enableAccessibleFieldDOMStructure = true,\n    dateSeparator\n  } = parameters;\n  return React.useMemo(() => ({\n    valueType: 'date',\n    validator: validateDateRange,\n    internal_valueManager: rangeValueManager,\n    internal_fieldValueManager: getRangeFieldValueManager({\n      dateSeparator\n    }),\n    internal_enableAccessibleFieldDOMStructure: enableAccessibleFieldDOMStructure,\n    internal_useApplyDefaultValuesToFieldInternalProps: useApplyDefaultValuesToDateRangeFieldInternalProps,\n    internal_useOpenPickerButtonAriaLabel: useOpenPickerButtonAriaLabel\n  }), [enableAccessibleFieldDOMStructure, dateSeparator]);\n}\nfunction useOpenPickerButtonAriaLabel(value) {\n  const adapter = usePickerAdapter();\n  const translations = usePickerTranslations();\n  return React.useMemo(() => {\n    return translations.openRangePickerDialogue(formatRange(adapter, value, 'fullDate'));\n  }, [value, translations, adapter]);\n}\nfunction useApplyDefaultValuesToDateRangeFieldInternalProps(internalProps) {\n  const adapter = usePickerAdapter();\n  const validationProps = useApplyDefaultValuesToDateValidationProps(internalProps);\n  return React.useMemo(() => _extends({}, internalProps, validationProps, {\n    format: internalProps.format ?? adapter.formats.keyboardDate\n  }), [internalProps, validationProps, adapter]);\n}","map":{"version":3,"names":["_extends","React","usePickerAdapter","usePickerTranslations","useApplyDefaultValuesToDateValidationProps","getRangeFieldValueManager","rangeValueManager","validateDateRange","formatRange","useDateRangeManager","parameters","enableAccessibleFieldDOMStructure","dateSeparator","useMemo","valueType","validator","internal_valueManager","internal_fieldValueManager","internal_enableAccessibleFieldDOMStructure","internal_useApplyDefaultValuesToFieldInternalProps","useApplyDefaultValuesToDateRangeFieldInternalProps","internal_useOpenPickerButtonAriaLabel","useOpenPickerButtonAriaLabel","value","adapter","translations","openRangePickerDialogue","internalProps","validationProps","format","formats","keyboardDate"],"sources":["C:/Users/tamak/Desktop/Workspace/ppe-watcher/node_modules/@mui/x-date-pickers-pro/esm/managers/useDateRangeManager.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { usePickerAdapter, usePickerTranslations } from '@mui/x-date-pickers/hooks';\nimport { useApplyDefaultValuesToDateValidationProps } from '@mui/x-date-pickers/internals';\nimport { getRangeFieldValueManager, rangeValueManager } from \"../internals/utils/valueManagers.js\";\nimport { validateDateRange } from \"../validation/index.js\";\nimport { formatRange } from \"../internals/utils/date-utils.js\";\nexport function useDateRangeManager(parameters = {}) {\n  const {\n    enableAccessibleFieldDOMStructure = true,\n    dateSeparator\n  } = parameters;\n  return React.useMemo(() => ({\n    valueType: 'date',\n    validator: validateDateRange,\n    internal_valueManager: rangeValueManager,\n    internal_fieldValueManager: getRangeFieldValueManager({\n      dateSeparator\n    }),\n    internal_enableAccessibleFieldDOMStructure: enableAccessibleFieldDOMStructure,\n    internal_useApplyDefaultValuesToFieldInternalProps: useApplyDefaultValuesToDateRangeFieldInternalProps,\n    internal_useOpenPickerButtonAriaLabel: useOpenPickerButtonAriaLabel\n  }), [enableAccessibleFieldDOMStructure, dateSeparator]);\n}\nfunction useOpenPickerButtonAriaLabel(value) {\n  const adapter = usePickerAdapter();\n  const translations = usePickerTranslations();\n  return React.useMemo(() => {\n    return translations.openRangePickerDialogue(formatRange(adapter, value, 'fullDate'));\n  }, [value, translations, adapter]);\n}\nfunction useApplyDefaultValuesToDateRangeFieldInternalProps(internalProps) {\n  const adapter = usePickerAdapter();\n  const validationProps = useApplyDefaultValuesToDateValidationProps(internalProps);\n  return React.useMemo(() => _extends({}, internalProps, validationProps, {\n    format: internalProps.format ?? adapter.formats.keyboardDate\n  }), [internalProps, validationProps, adapter]);\n}"],"mappings":"AAAA,YAAY;;AAEZ,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,gBAAgB,EAAEC,qBAAqB,QAAQ,2BAA2B;AACnF,SAASC,0CAA0C,QAAQ,+BAA+B;AAC1F,SAASC,yBAAyB,EAAEC,iBAAiB,QAAQ,qCAAqC;AAClG,SAASC,iBAAiB,QAAQ,wBAAwB;AAC1D,SAASC,WAAW,QAAQ,kCAAkC;AAC9D,OAAO,SAASC,mBAAmBA,CAACC,UAAU,GAAG,CAAC,CAAC,EAAE;EACnD,MAAM;IACJC,iCAAiC,GAAG,IAAI;IACxCC;EACF,CAAC,GAAGF,UAAU;EACd,OAAOT,KAAK,CAACY,OAAO,CAAC,OAAO;IAC1BC,SAAS,EAAE,MAAM;IACjBC,SAAS,EAAER,iBAAiB;IAC5BS,qBAAqB,EAAEV,iBAAiB;IACxCW,0BAA0B,EAAEZ,yBAAyB,CAAC;MACpDO;IACF,CAAC,CAAC;IACFM,0CAA0C,EAAEP,iCAAiC;IAC7EQ,kDAAkD,EAAEC,kDAAkD;IACtGC,qCAAqC,EAAEC;EACzC,CAAC,CAAC,EAAE,CAACX,iCAAiC,EAAEC,aAAa,CAAC,CAAC;AACzD;AACA,SAASU,4BAA4BA,CAACC,KAAK,EAAE;EAC3C,MAAMC,OAAO,GAAGtB,gBAAgB,CAAC,CAAC;EAClC,MAAMuB,YAAY,GAAGtB,qBAAqB,CAAC,CAAC;EAC5C,OAAOF,KAAK,CAACY,OAAO,CAAC,MAAM;IACzB,OAAOY,YAAY,CAACC,uBAAuB,CAAClB,WAAW,CAACgB,OAAO,EAAED,KAAK,EAAE,UAAU,CAAC,CAAC;EACtF,CAAC,EAAE,CAACA,KAAK,EAAEE,YAAY,EAAED,OAAO,CAAC,CAAC;AACpC;AACA,SAASJ,kDAAkDA,CAACO,aAAa,EAAE;EACzE,MAAMH,OAAO,GAAGtB,gBAAgB,CAAC,CAAC;EAClC,MAAM0B,eAAe,GAAGxB,0CAA0C,CAACuB,aAAa,CAAC;EACjF,OAAO1B,KAAK,CAACY,OAAO,CAAC,MAAMb,QAAQ,CAAC,CAAC,CAAC,EAAE2B,aAAa,EAAEC,eAAe,EAAE;IACtEC,MAAM,EAAEF,aAAa,CAACE,MAAM,IAAIL,OAAO,CAACM,OAAO,CAACC;EAClD,CAAC,CAAC,EAAE,CAACJ,aAAa,EAAEC,eAAe,EAAEJ,OAAO,CAAC,CAAC;AAChD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}