{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport { PickersTextField } from '@mui/x-date-pickers/PickersTextField';\nimport { usePickerTranslations } from '@mui/x-date-pickers/hooks';\nimport { PickerFieldUIContext, useNullablePickerContext, mergeSlotProps } from '@mui/x-date-pickers/internals';\nimport { useNullablePickerRangePositionContext } from \"../../hooks/useNullablePickerRangePositionContext.js\";\nexport function useTextFieldProps({\n  slotProps,\n  ownerState,\n  position,\n  allowTriggerShifting\n}) {\n  const pickerContext = useNullablePickerContext();\n  const translations = usePickerTranslations();\n  const pickerFieldUIContext = React.useContext(PickerFieldUIContext);\n  const rangePositionContext = useNullablePickerRangePositionContext();\n  const textFieldProps = useSlotProps({\n    elementType: PickersTextField,\n    externalSlotProps: mergeSlotProps(pickerFieldUIContext.slotProps.textField, slotProps?.textField),\n    additionalProps: {\n      // TODO: Decide if we also want to set the default labels on standalone fields.\n      label: pickerContext ? translations[position] : undefined,\n      focused: pickerContext?.open ? rangePositionContext?.rangePosition === position : undefined\n    },\n    ownerState: _extends({}, ownerState, {\n      position\n    })\n  });\n  if (!textFieldProps.InputProps) {\n    textFieldProps.InputProps = {};\n  }\n  if (pickerContext) {\n    if (!allowTriggerShifting) {\n      if (position === 'start') {\n        textFieldProps.InputProps.ref = pickerContext.triggerRef;\n      }\n    } else if (rangePositionContext?.rangePosition === position) {\n      textFieldProps.InputProps.ref = pickerContext.triggerRef;\n    }\n  }\n  textFieldProps.InputProps['data-multi-input'] = position;\n  return textFieldProps;\n}","map":{"version":3,"names":["_extends","React","useSlotProps","PickersTextField","usePickerTranslations","PickerFieldUIContext","useNullablePickerContext","mergeSlotProps","useNullablePickerRangePositionContext","useTextFieldProps","slotProps","ownerState","position","allowTriggerShifting","pickerContext","translations","pickerFieldUIContext","useContext","rangePositionContext","textFieldProps","elementType","externalSlotProps","textField","additionalProps","label","undefined","focused","open","rangePosition","InputProps","ref","triggerRef"],"sources":["C:/Users/tamak/Desktop/Workspace/ppe-watcher/node_modules/@mui/x-date-pickers-pro/esm/internals/utils/createMultiInputRangeField/useTextFieldProps.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport { PickersTextField } from '@mui/x-date-pickers/PickersTextField';\nimport { usePickerTranslations } from '@mui/x-date-pickers/hooks';\nimport { PickerFieldUIContext, useNullablePickerContext, mergeSlotProps } from '@mui/x-date-pickers/internals';\nimport { useNullablePickerRangePositionContext } from \"../../hooks/useNullablePickerRangePositionContext.js\";\nexport function useTextFieldProps({\n  slotProps,\n  ownerState,\n  position,\n  allowTriggerShifting\n}) {\n  const pickerContext = useNullablePickerContext();\n  const translations = usePickerTranslations();\n  const pickerFieldUIContext = React.useContext(PickerFieldUIContext);\n  const rangePositionContext = useNullablePickerRangePositionContext();\n  const textFieldProps = useSlotProps({\n    elementType: PickersTextField,\n    externalSlotProps: mergeSlotProps(pickerFieldUIContext.slotProps.textField, slotProps?.textField),\n    additionalProps: {\n      // TODO: Decide if we also want to set the default labels on standalone fields.\n      label: pickerContext ? translations[position] : undefined,\n      focused: pickerContext?.open ? rangePositionContext?.rangePosition === position : undefined\n    },\n    ownerState: _extends({}, ownerState, {\n      position\n    })\n  });\n  if (!textFieldProps.InputProps) {\n    textFieldProps.InputProps = {};\n  }\n  if (pickerContext) {\n    if (!allowTriggerShifting) {\n      if (position === 'start') {\n        textFieldProps.InputProps.ref = pickerContext.triggerRef;\n      }\n    } else if (rangePositionContext?.rangePosition === position) {\n      textFieldProps.InputProps.ref = pickerContext.triggerRef;\n    }\n  }\n  textFieldProps.InputProps['data-multi-input'] = position;\n  return textFieldProps;\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,YAAY,MAAM,yBAAyB;AAClD,SAASC,gBAAgB,QAAQ,sCAAsC;AACvE,SAASC,qBAAqB,QAAQ,2BAA2B;AACjE,SAASC,oBAAoB,EAAEC,wBAAwB,EAAEC,cAAc,QAAQ,+BAA+B;AAC9G,SAASC,qCAAqC,QAAQ,sDAAsD;AAC5G,OAAO,SAASC,iBAAiBA,CAAC;EAChCC,SAAS;EACTC,UAAU;EACVC,QAAQ;EACRC;AACF,CAAC,EAAE;EACD,MAAMC,aAAa,GAAGR,wBAAwB,CAAC,CAAC;EAChD,MAAMS,YAAY,GAAGX,qBAAqB,CAAC,CAAC;EAC5C,MAAMY,oBAAoB,GAAGf,KAAK,CAACgB,UAAU,CAACZ,oBAAoB,CAAC;EACnE,MAAMa,oBAAoB,GAAGV,qCAAqC,CAAC,CAAC;EACpE,MAAMW,cAAc,GAAGjB,YAAY,CAAC;IAClCkB,WAAW,EAAEjB,gBAAgB;IAC7BkB,iBAAiB,EAAEd,cAAc,CAACS,oBAAoB,CAACN,SAAS,CAACY,SAAS,EAAEZ,SAAS,EAAEY,SAAS,CAAC;IACjGC,eAAe,EAAE;MACf;MACAC,KAAK,EAAEV,aAAa,GAAGC,YAAY,CAACH,QAAQ,CAAC,GAAGa,SAAS;MACzDC,OAAO,EAAEZ,aAAa,EAAEa,IAAI,GAAGT,oBAAoB,EAAEU,aAAa,KAAKhB,QAAQ,GAAGa;IACpF,CAAC;IACDd,UAAU,EAAEX,QAAQ,CAAC,CAAC,CAAC,EAAEW,UAAU,EAAE;MACnCC;IACF,CAAC;EACH,CAAC,CAAC;EACF,IAAI,CAACO,cAAc,CAACU,UAAU,EAAE;IAC9BV,cAAc,CAACU,UAAU,GAAG,CAAC,CAAC;EAChC;EACA,IAAIf,aAAa,EAAE;IACjB,IAAI,CAACD,oBAAoB,EAAE;MACzB,IAAID,QAAQ,KAAK,OAAO,EAAE;QACxBO,cAAc,CAACU,UAAU,CAACC,GAAG,GAAGhB,aAAa,CAACiB,UAAU;MAC1D;IACF,CAAC,MAAM,IAAIb,oBAAoB,EAAEU,aAAa,KAAKhB,QAAQ,EAAE;MAC3DO,cAAc,CAACU,UAAU,CAACC,GAAG,GAAGhB,aAAa,CAACiB,UAAU;IAC1D;EACF;EACAZ,cAAc,CAACU,UAAU,CAAC,kBAAkB,CAAC,GAAGjB,QAAQ;EACxD,OAAOO,cAAc;AACvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}