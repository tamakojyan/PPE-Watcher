{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { sendMuiXTelemetryEvent, muiXTelemetryEvents } from '@mui/x-telemetry';\nimport { verifyLicense } from \"../verifyLicense/verifyLicense.js\";\nimport { LicenseInfo } from \"../utils/licenseInfo.js\";\nimport { showExpiredAnnualGraceLicenseKeyError, showExpiredAnnualLicenseKeyError, showInvalidLicenseKeyError, showMissingLicenseKeyError, showLicenseKeyPlanMismatchError, showExpiredPackageVersionError, showNotAvailableInInitialProPlanError } from \"../utils/licenseErrorMessageUtils.js\";\nimport { LICENSE_STATUS } from \"../utils/licenseStatus.js\";\nimport MuiLicenseInfoContext from \"../Unstable_LicenseInfoProvider/MuiLicenseInfoContext.js\";\nexport const sharedLicenseStatuses = {};\n\n/**\n * Clears the license status cache for all packages.\n * This should not be used in production code, but can be useful for testing purposes.\n */\nexport function clearLicenseStatusCache() {\n  for (const packageName in sharedLicenseStatuses) {\n    if (Object.prototype.hasOwnProperty.call(sharedLicenseStatuses, packageName)) {\n      delete sharedLicenseStatuses[packageName];\n    }\n  }\n}\nexport function useLicenseVerifier(packageName, releaseInfo) {\n  const {\n    key: contextKey\n  } = React.useContext(MuiLicenseInfoContext);\n  return React.useMemo(() => {\n    const licenseKey = contextKey ?? LicenseInfo.getLicenseKey();\n\n    // Cache the response to not trigger the error twice.\n    if (sharedLicenseStatuses[packageName] && sharedLicenseStatuses[packageName].key === licenseKey) {\n      return sharedLicenseStatuses[packageName].licenseVerifier;\n    }\n    const plan = packageName.includes('premium') ? 'Premium' : 'Pro';\n    const licenseStatus = verifyLicense({\n      releaseInfo,\n      licenseKey,\n      packageName\n    });\n    const fullPackageName = `@mui/${packageName}`;\n    sendMuiXTelemetryEvent(muiXTelemetryEvents.licenseVerification({\n      licenseKey\n    }, {\n      packageName,\n      packageReleaseInfo: releaseInfo,\n      licenseStatus: licenseStatus?.status\n    }));\n    if (licenseStatus.status === LICENSE_STATUS.Valid) {\n      // Skip\n    } else if (licenseStatus.status === LICENSE_STATUS.Invalid) {\n      showInvalidLicenseKeyError();\n    } else if (licenseStatus.status === LICENSE_STATUS.NotAvailableInInitialProPlan) {\n      showNotAvailableInInitialProPlanError();\n    } else if (licenseStatus.status === LICENSE_STATUS.OutOfScope) {\n      showLicenseKeyPlanMismatchError();\n    } else if (licenseStatus.status === LICENSE_STATUS.NotFound) {\n      showMissingLicenseKeyError({\n        plan,\n        packageName: fullPackageName\n      });\n    } else if (licenseStatus.status === LICENSE_STATUS.ExpiredAnnualGrace) {\n      showExpiredAnnualGraceLicenseKeyError(_extends({\n        plan\n      }, licenseStatus.meta));\n    } else if (licenseStatus.status === LICENSE_STATUS.ExpiredAnnual) {\n      showExpiredAnnualLicenseKeyError(_extends({\n        plan\n      }, licenseStatus.meta));\n    } else if (licenseStatus.status === LICENSE_STATUS.ExpiredVersion) {\n      showExpiredPackageVersionError({\n        packageName: fullPackageName\n      });\n    } else if (process.env.NODE_ENV !== 'production') {\n      throw new Error('missing status handler');\n    }\n    sharedLicenseStatuses[packageName] = {\n      key: licenseKey,\n      licenseVerifier: licenseStatus\n    };\n    return licenseStatus;\n  }, [packageName, releaseInfo, contextKey]);\n}","map":{"version":3,"names":["_extends","React","sendMuiXTelemetryEvent","muiXTelemetryEvents","verifyLicense","LicenseInfo","showExpiredAnnualGraceLicenseKeyError","showExpiredAnnualLicenseKeyError","showInvalidLicenseKeyError","showMissingLicenseKeyError","showLicenseKeyPlanMismatchError","showExpiredPackageVersionError","showNotAvailableInInitialProPlanError","LICENSE_STATUS","MuiLicenseInfoContext","sharedLicenseStatuses","clearLicenseStatusCache","packageName","Object","prototype","hasOwnProperty","call","useLicenseVerifier","releaseInfo","key","contextKey","useContext","useMemo","licenseKey","getLicenseKey","licenseVerifier","plan","includes","licenseStatus","fullPackageName","licenseVerification","packageReleaseInfo","status","Valid","Invalid","NotAvailableInInitialProPlan","OutOfScope","NotFound","ExpiredAnnualGrace","meta","ExpiredAnnual","ExpiredVersion","process","env","NODE_ENV","Error"],"sources":["C:/Users/tamak/Desktop/Workspace/ppe-watcher/node_modules/@mui/x-license/esm/useLicenseVerifier/useLicenseVerifier.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { sendMuiXTelemetryEvent, muiXTelemetryEvents } from '@mui/x-telemetry';\nimport { verifyLicense } from \"../verifyLicense/verifyLicense.js\";\nimport { LicenseInfo } from \"../utils/licenseInfo.js\";\nimport { showExpiredAnnualGraceLicenseKeyError, showExpiredAnnualLicenseKeyError, showInvalidLicenseKeyError, showMissingLicenseKeyError, showLicenseKeyPlanMismatchError, showExpiredPackageVersionError, showNotAvailableInInitialProPlanError } from \"../utils/licenseErrorMessageUtils.js\";\nimport { LICENSE_STATUS } from \"../utils/licenseStatus.js\";\nimport MuiLicenseInfoContext from \"../Unstable_LicenseInfoProvider/MuiLicenseInfoContext.js\";\nexport const sharedLicenseStatuses = {};\n\n/**\n * Clears the license status cache for all packages.\n * This should not be used in production code, but can be useful for testing purposes.\n */\nexport function clearLicenseStatusCache() {\n  for (const packageName in sharedLicenseStatuses) {\n    if (Object.prototype.hasOwnProperty.call(sharedLicenseStatuses, packageName)) {\n      delete sharedLicenseStatuses[packageName];\n    }\n  }\n}\nexport function useLicenseVerifier(packageName, releaseInfo) {\n  const {\n    key: contextKey\n  } = React.useContext(MuiLicenseInfoContext);\n  return React.useMemo(() => {\n    const licenseKey = contextKey ?? LicenseInfo.getLicenseKey();\n\n    // Cache the response to not trigger the error twice.\n    if (sharedLicenseStatuses[packageName] && sharedLicenseStatuses[packageName].key === licenseKey) {\n      return sharedLicenseStatuses[packageName].licenseVerifier;\n    }\n    const plan = packageName.includes('premium') ? 'Premium' : 'Pro';\n    const licenseStatus = verifyLicense({\n      releaseInfo,\n      licenseKey,\n      packageName\n    });\n    const fullPackageName = `@mui/${packageName}`;\n    sendMuiXTelemetryEvent(muiXTelemetryEvents.licenseVerification({\n      licenseKey\n    }, {\n      packageName,\n      packageReleaseInfo: releaseInfo,\n      licenseStatus: licenseStatus?.status\n    }));\n    if (licenseStatus.status === LICENSE_STATUS.Valid) {\n      // Skip\n    } else if (licenseStatus.status === LICENSE_STATUS.Invalid) {\n      showInvalidLicenseKeyError();\n    } else if (licenseStatus.status === LICENSE_STATUS.NotAvailableInInitialProPlan) {\n      showNotAvailableInInitialProPlanError();\n    } else if (licenseStatus.status === LICENSE_STATUS.OutOfScope) {\n      showLicenseKeyPlanMismatchError();\n    } else if (licenseStatus.status === LICENSE_STATUS.NotFound) {\n      showMissingLicenseKeyError({\n        plan,\n        packageName: fullPackageName\n      });\n    } else if (licenseStatus.status === LICENSE_STATUS.ExpiredAnnualGrace) {\n      showExpiredAnnualGraceLicenseKeyError(_extends({\n        plan\n      }, licenseStatus.meta));\n    } else if (licenseStatus.status === LICENSE_STATUS.ExpiredAnnual) {\n      showExpiredAnnualLicenseKeyError(_extends({\n        plan\n      }, licenseStatus.meta));\n    } else if (licenseStatus.status === LICENSE_STATUS.ExpiredVersion) {\n      showExpiredPackageVersionError({\n        packageName: fullPackageName\n      });\n    } else if (process.env.NODE_ENV !== 'production') {\n      throw new Error('missing status handler');\n    }\n    sharedLicenseStatuses[packageName] = {\n      key: licenseKey,\n      licenseVerifier: licenseStatus\n    };\n    return licenseStatus;\n  }, [packageName, releaseInfo, contextKey]);\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}