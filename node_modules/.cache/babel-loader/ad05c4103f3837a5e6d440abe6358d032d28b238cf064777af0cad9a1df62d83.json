{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tamak\\\\Desktop\\\\Workspace\\\\ppe-watcher\\\\src\\\\pages\\\\History\\\\Trends\\\\index.tsx\";\nimport { Chip, Grid, Typography, Button } from '@mui/material';\nimport { mockViolations } from 'mock/violations';\nimport { format, startOfDay } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst allTypes = ['No Mask', 'No Helmet', 'No Vest', 'No Gloves'];\nfunction groupByDay(violations) {\n  const map = new Map();\n  for (const v of violations) {\n    const d = startOfDay(new Date(v.timestamp));\n    const key = format(d, 'yyyy-MM-dd');\n    if (!map.has(key)) {\n      map.set(key, {\n        date: key,\n        total: 0,\n        open: 0,\n        resolved: 0,\n        byType: Object.fromEntries(allTypes.map(t => [t, 0]))\n      });\n    }\n    const bucket = map.get(key);\n    bucket.total += 1;\n    if (v.status === 'open') bucket.open += 1;else if (v.status === 'resolved') bucket.resolved += 1;\n    v.type.forEach(t => bucket.byType[t] += 1);\n  }\n  return Array.from(map.values()).sort((a, b) => a.date.localeCompare(b.date));\n}\nexport default function Trends() {\n  const dayData = groupByDay(mockViolations);\n  console.log(dayData);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    sx: {\n      flex: 1,\n      minHeight: 0,\n      bgcolor: 'background.paper'\n    },\n    direction: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      size: {\n        xs: 12\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: 'h6',\n        children: \"Trends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      size: {\n        xs: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        size: {\n          xs: 12\n        },\n        sx: {\n          borderTop: '1px solid',\n          borderBottom: '1px solid'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          size: {\n            xs: 6,\n            md: 10\n          },\n          children: \"ToolBar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          size: {\n            xs: 6,\n            md: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            children: \"Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        size: {\n          xs: 12\n        },\n        children: /*#__PURE__*/_jsxDEV(Chip, {\n          label: 'TOOlBAR'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      size: {\n        xs: 12\n      },\n      sx: {\n        flex: 1,\n        minHeight: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        size: {\n          xs: 12,\n          md: 10\n        },\n        sx: {\n          borderRight: '1px solid'\n        },\n        children: \"Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        size: {\n          xs: 12,\n          md: 2\n        },\n        children: \"details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_c = Trends;\nvar _c;\n$RefreshReg$(_c, \"Trends\");","map":{"version":3,"names":["Chip","Grid","Typography","Button","mockViolations","format","startOfDay","jsxDEV","_jsxDEV","allTypes","groupByDay","violations","map","Map","v","d","Date","timestamp","key","has","set","date","total","open","resolved","byType","Object","fromEntries","t","bucket","get","status","type","forEach","Array","from","values","sort","a","b","localeCompare","Trends","dayData","console","log","container","sx","flex","minHeight","bgcolor","direction","children","size","xs","variant","fileName","_jsxFileName","lineNumber","columnNumber","borderTop","borderBottom","md","label","borderRight","_c","$RefreshReg$"],"sources":["C:/Users/tamak/Desktop/Workspace/ppe-watcher/src/pages/History/Trends/index.tsx"],"sourcesContent":["import * as react from 'react';\nimport {\n  Chip,\n  Grid,\n  Stack,\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  Divider,\n  Button,\n} from '@mui/material';\nimport { mockViolations } from 'mock/violations';\nimport {\n  ResponsiveContainer,\n  BarChart,\n  Bar,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  LineChart,\n  Line,\n} from 'recharts';\nimport { format, startOfDay } from 'date-fns';\ntype violationData = {\n  id: string;\n  type: string[];\n  status: string;\n  handler: null | string;\n  timestamp: string;\n  imageUrl: string;\n};\nconst allTypes = ['No Mask', 'No Helmet', 'No Vest', 'No Gloves'] as const;\ntype PPEType = (typeof allTypes)[number];\ntype bucket = {\n  date: string;\n  total: number;\n  open: number;\n  resolved: number;\n  byType: Record<PPEType, number>;\n};\nfunction groupByDay(violations: violationData[]): bucket[] {\n  const map = new Map<string, bucket>();\n  for (const v of violations) {\n    const d = startOfDay(new Date(v.timestamp));\n    const key = format(d, 'yyyy-MM-dd');\n    if (!map.has(key)) {\n      map.set(key, {\n        date: key,\n        total: 0,\n        open: 0,\n        resolved: 0,\n        byType: Object.fromEntries(allTypes.map((t) => [t, 0])) as Record<string, number>,\n      });\n    }\n    const bucket = map.get(key)!;\n    bucket.total += 1;\n    if (v.status === 'open') bucket.open += 1;\n    else if (v.status === 'resolved') bucket.resolved += 1;\n    v.type.forEach((t) => (bucket.byType[t as PPEType] += 1));\n  }\n  return Array.from(map.values()).sort((a, b) => a.date.localeCompare(b.date));\n}\nexport default function Trends(): React.ReactElement {\n  const dayData = groupByDay(mockViolations);\n  console.log(dayData);\n  return (\n    <Grid container sx={{ flex: 1, minHeight: 0, bgcolor: 'background.paper' }} direction=\"column\">\n      <Grid size={{ xs: 12 }}>\n        <Typography variant={'h6'}>Trends</Typography>\n      </Grid>\n      <Grid container size={{ xs: 12 }}>\n        <Grid\n          container\n          size={{ xs: 12 }}\n          sx={{ borderTop: '1px solid', borderBottom: '1px solid' }}\n        >\n          <Grid size={{ xs: 6, md: 10 }}>ToolBar</Grid>\n          <Grid size={{ xs: 6, md: 2 }}>\n            <Button>Generate</Button>\n            <Button>Export</Button>\n          </Grid>\n        </Grid>\n        <Grid size={{ xs: 12 }}>\n          <Chip label={'TOOlBAR'} />\n        </Grid>\n      </Grid>\n      <Grid container size={{ xs: 12 }} sx={{ flex: 1, minHeight: 0 }}>\n        <Grid size={{ xs: 12, md: 10 }} sx={{ borderRight: '1px solid' }}>\n          Chart\n        </Grid>\n        <Grid size={{ xs: 12, md: 2 }}>details</Grid>\n      </Grid>\n    </Grid>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}