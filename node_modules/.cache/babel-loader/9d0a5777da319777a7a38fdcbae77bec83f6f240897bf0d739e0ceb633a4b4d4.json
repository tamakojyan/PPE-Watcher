{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { usePickerAdapter, usePickerTranslations } from '@mui/x-date-pickers/hooks';\nimport { useApplyDefaultValuesToTimeValidationProps } from '@mui/x-date-pickers/internals';\nimport { getRangeFieldValueManager, rangeValueManager } from \"../internals/utils/valueManagers.js\";\nimport { validateTimeRange } from \"../validation/index.js\";\nimport { formatRange } from \"../internals/utils/date-utils.js\";\nexport function useTimeRangeManager(parameters = {}) {\n  const {\n    enableAccessibleFieldDOMStructure = true,\n    dateSeparator,\n    ampm\n  } = parameters;\n  return React.useMemo(() => ({\n    valueType: 'time',\n    validator: validateTimeRange,\n    internal_valueManager: rangeValueManager,\n    internal_fieldValueManager: getRangeFieldValueManager({\n      dateSeparator\n    }),\n    internal_enableAccessibleFieldDOMStructure: enableAccessibleFieldDOMStructure,\n    internal_useApplyDefaultValuesToFieldInternalProps: useApplyDefaultValuesToTimeRangeFieldInternalProps,\n    internal_useOpenPickerButtonAriaLabel: createUseOpenPickerButtonAriaLabel(ampm)\n  }), [enableAccessibleFieldDOMStructure, dateSeparator, ampm]);\n}\nfunction createUseOpenPickerButtonAriaLabel(ampm) {\n  return function useOpenPickerButtonAriaLabel(value) {\n    const adapter = usePickerAdapter();\n    const translations = usePickerTranslations();\n    return React.useMemo(() => {\n      const formatKey = ampm ?? adapter.is12HourCycleInCurrentLocale() ? 'fullTime12h' : 'fullTime24h';\n      return translations.openRangePickerDialogue(formatRange(adapter, value, formatKey));\n    }, [value, translations, adapter]);\n  };\n}\nfunction useApplyDefaultValuesToTimeRangeFieldInternalProps(internalProps) {\n  const adapter = usePickerAdapter();\n  const validationProps = useApplyDefaultValuesToTimeValidationProps(internalProps);\n  const ampm = React.useMemo(() => internalProps.ampm ?? adapter.is12HourCycleInCurrentLocale(), [internalProps.ampm, adapter]);\n  return React.useMemo(() => _extends({}, internalProps, validationProps, {\n    format: internalProps.format ?? (ampm ? adapter.formats.fullTime12h : adapter.formats.fullTime24h)\n  }), [internalProps, validationProps, ampm, adapter]);\n}","map":{"version":3,"names":["_extends","React","usePickerAdapter","usePickerTranslations","useApplyDefaultValuesToTimeValidationProps","getRangeFieldValueManager","rangeValueManager","validateTimeRange","formatRange","useTimeRangeManager","parameters","enableAccessibleFieldDOMStructure","dateSeparator","ampm","useMemo","valueType","validator","internal_valueManager","internal_fieldValueManager","internal_enableAccessibleFieldDOMStructure","internal_useApplyDefaultValuesToFieldInternalProps","useApplyDefaultValuesToTimeRangeFieldInternalProps","internal_useOpenPickerButtonAriaLabel","createUseOpenPickerButtonAriaLabel","useOpenPickerButtonAriaLabel","value","adapter","translations","formatKey","is12HourCycleInCurrentLocale","openRangePickerDialogue","internalProps","validationProps","format","formats","fullTime12h","fullTime24h"],"sources":["C:/Users/tamak/Desktop/Workspace/ppe-watcher/node_modules/@mui/x-date-pickers-pro/esm/managers/useTimeRangeManager.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { usePickerAdapter, usePickerTranslations } from '@mui/x-date-pickers/hooks';\nimport { useApplyDefaultValuesToTimeValidationProps } from '@mui/x-date-pickers/internals';\nimport { getRangeFieldValueManager, rangeValueManager } from \"../internals/utils/valueManagers.js\";\nimport { validateTimeRange } from \"../validation/index.js\";\nimport { formatRange } from \"../internals/utils/date-utils.js\";\nexport function useTimeRangeManager(parameters = {}) {\n  const {\n    enableAccessibleFieldDOMStructure = true,\n    dateSeparator,\n    ampm\n  } = parameters;\n  return React.useMemo(() => ({\n    valueType: 'time',\n    validator: validateTimeRange,\n    internal_valueManager: rangeValueManager,\n    internal_fieldValueManager: getRangeFieldValueManager({\n      dateSeparator\n    }),\n    internal_enableAccessibleFieldDOMStructure: enableAccessibleFieldDOMStructure,\n    internal_useApplyDefaultValuesToFieldInternalProps: useApplyDefaultValuesToTimeRangeFieldInternalProps,\n    internal_useOpenPickerButtonAriaLabel: createUseOpenPickerButtonAriaLabel(ampm)\n  }), [enableAccessibleFieldDOMStructure, dateSeparator, ampm]);\n}\nfunction createUseOpenPickerButtonAriaLabel(ampm) {\n  return function useOpenPickerButtonAriaLabel(value) {\n    const adapter = usePickerAdapter();\n    const translations = usePickerTranslations();\n    return React.useMemo(() => {\n      const formatKey = ampm ?? adapter.is12HourCycleInCurrentLocale() ? 'fullTime12h' : 'fullTime24h';\n      return translations.openRangePickerDialogue(formatRange(adapter, value, formatKey));\n    }, [value, translations, adapter]);\n  };\n}\nfunction useApplyDefaultValuesToTimeRangeFieldInternalProps(internalProps) {\n  const adapter = usePickerAdapter();\n  const validationProps = useApplyDefaultValuesToTimeValidationProps(internalProps);\n  const ampm = React.useMemo(() => internalProps.ampm ?? adapter.is12HourCycleInCurrentLocale(), [internalProps.ampm, adapter]);\n  return React.useMemo(() => _extends({}, internalProps, validationProps, {\n    format: internalProps.format ?? (ampm ? adapter.formats.fullTime12h : adapter.formats.fullTime24h)\n  }), [internalProps, validationProps, ampm, adapter]);\n}"],"mappings":"AAAA,YAAY;;AAEZ,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,gBAAgB,EAAEC,qBAAqB,QAAQ,2BAA2B;AACnF,SAASC,0CAA0C,QAAQ,+BAA+B;AAC1F,SAASC,yBAAyB,EAAEC,iBAAiB,QAAQ,qCAAqC;AAClG,SAASC,iBAAiB,QAAQ,wBAAwB;AAC1D,SAASC,WAAW,QAAQ,kCAAkC;AAC9D,OAAO,SAASC,mBAAmBA,CAACC,UAAU,GAAG,CAAC,CAAC,EAAE;EACnD,MAAM;IACJC,iCAAiC,GAAG,IAAI;IACxCC,aAAa;IACbC;EACF,CAAC,GAAGH,UAAU;EACd,OAAOT,KAAK,CAACa,OAAO,CAAC,OAAO;IAC1BC,SAAS,EAAE,MAAM;IACjBC,SAAS,EAAET,iBAAiB;IAC5BU,qBAAqB,EAAEX,iBAAiB;IACxCY,0BAA0B,EAAEb,yBAAyB,CAAC;MACpDO;IACF,CAAC,CAAC;IACFO,0CAA0C,EAAER,iCAAiC;IAC7ES,kDAAkD,EAAEC,kDAAkD;IACtGC,qCAAqC,EAAEC,kCAAkC,CAACV,IAAI;EAChF,CAAC,CAAC,EAAE,CAACF,iCAAiC,EAAEC,aAAa,EAAEC,IAAI,CAAC,CAAC;AAC/D;AACA,SAASU,kCAAkCA,CAACV,IAAI,EAAE;EAChD,OAAO,SAASW,4BAA4BA,CAACC,KAAK,EAAE;IAClD,MAAMC,OAAO,GAAGxB,gBAAgB,CAAC,CAAC;IAClC,MAAMyB,YAAY,GAAGxB,qBAAqB,CAAC,CAAC;IAC5C,OAAOF,KAAK,CAACa,OAAO,CAAC,MAAM;MACzB,MAAMc,SAAS,GAAGf,IAAI,IAAIa,OAAO,CAACG,4BAA4B,CAAC,CAAC,GAAG,aAAa,GAAG,aAAa;MAChG,OAAOF,YAAY,CAACG,uBAAuB,CAACtB,WAAW,CAACkB,OAAO,EAAED,KAAK,EAAEG,SAAS,CAAC,CAAC;IACrF,CAAC,EAAE,CAACH,KAAK,EAAEE,YAAY,EAAED,OAAO,CAAC,CAAC;EACpC,CAAC;AACH;AACA,SAASL,kDAAkDA,CAACU,aAAa,EAAE;EACzE,MAAML,OAAO,GAAGxB,gBAAgB,CAAC,CAAC;EAClC,MAAM8B,eAAe,GAAG5B,0CAA0C,CAAC2B,aAAa,CAAC;EACjF,MAAMlB,IAAI,GAAGZ,KAAK,CAACa,OAAO,CAAC,MAAMiB,aAAa,CAAClB,IAAI,IAAIa,OAAO,CAACG,4BAA4B,CAAC,CAAC,EAAE,CAACE,aAAa,CAAClB,IAAI,EAAEa,OAAO,CAAC,CAAC;EAC7H,OAAOzB,KAAK,CAACa,OAAO,CAAC,MAAMd,QAAQ,CAAC,CAAC,CAAC,EAAE+B,aAAa,EAAEC,eAAe,EAAE;IACtEC,MAAM,EAAEF,aAAa,CAACE,MAAM,KAAKpB,IAAI,GAAGa,OAAO,CAACQ,OAAO,CAACC,WAAW,GAAGT,OAAO,CAACQ,OAAO,CAACE,WAAW;EACnG,CAAC,CAAC,EAAE,CAACL,aAAa,EAAEC,eAAe,EAAEnB,IAAI,EAAEa,OAAO,CAAC,CAAC;AACtD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}