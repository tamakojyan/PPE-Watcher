{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tamak\\\\Desktop\\\\Workspace\\\\ppe-watcher\\\\src\\\\pages\\\\Dashboard\\\\LiveFeed\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { Box, Card, CardContent, CardHeader, FormControl, InputLabel, MenuItem, Select, Stack, Button, Typography, Chip } from '@mui/material';\n\n/** 三种模拟方式 */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/** 小工具：类型断言（更安全地通过 TS 检查） */\nfunction assertStream(s) {\n  if (!s) throw new Error('MediaStream is null (source stream not ready).');\n}\nfunction assertPC(pc) {\n  if (!pc) throw new Error('PeerConnection is null (pc not ready).');\n}\nexport default function LiveFeed() {\n  _s();\n  const [mode, setMode] = React.useState('webcam');\n  const [status, setStatus] = React.useState('idle');\n\n  /** 可见的视频（渲染本地/远端） */\n  const videoRef = React.useRef(null);\n  /** 隐藏的视频（用于 captureStream） */\n  const hiddenFileVideoRef = React.useRef(null);\n\n  /** WebRTC 相关 */\n  const pc1Ref = React.useRef(null); // 发送端\n  const pc2Ref = React.useRef(null); // 接收端\n  const sourceStreamRef = React.useRef(null); // 媒体源\n\n  const handleModeChange = e => {\n    setMode(e.target.value);\n  };\n\n  /** 停止当前所有资源（流/连接/视频） */\n  const stop = React.useCallback(async () => {\n    try {\n      var _pc1Ref$current, _pc2Ref$current, _pc1Ref$current2, _pc2Ref$current2, _sourceStreamRef$curr;\n      // 关闭 PeerConnection & 轨道\n      (_pc1Ref$current = pc1Ref.current) === null || _pc1Ref$current === void 0 ? void 0 : _pc1Ref$current.getSenders().forEach(s => {\n        var _s$track;\n        return (_s$track = s.track) === null || _s$track === void 0 ? void 0 : _s$track.stop();\n      });\n      (_pc2Ref$current = pc2Ref.current) === null || _pc2Ref$current === void 0 ? void 0 : _pc2Ref$current.getSenders().forEach(s => {\n        var _s$track2;\n        return (_s$track2 = s.track) === null || _s$track2 === void 0 ? void 0 : _s$track2.stop();\n      });\n      (_pc1Ref$current2 = pc1Ref.current) === null || _pc1Ref$current2 === void 0 ? void 0 : _pc1Ref$current2.close();\n      (_pc2Ref$current2 = pc2Ref.current) === null || _pc2Ref$current2 === void 0 ? void 0 : _pc2Ref$current2.close();\n      pc1Ref.current = null;\n      pc2Ref.current = null;\n\n      // 停止源流\n      (_sourceStreamRef$curr = sourceStreamRef.current) === null || _sourceStreamRef$curr === void 0 ? void 0 : _sourceStreamRef$curr.getTracks().forEach(t => t.stop());\n      sourceStreamRef.current = null;\n\n      // 停止可见 video\n      if (videoRef.current) {\n        videoRef.current.pause();\n        videoRef.current.srcObject = null;\n        videoRef.current.removeAttribute('src');\n        videoRef.current.load();\n      }\n\n      // 停止隐藏 video\n      if (hiddenFileVideoRef.current) {\n        hiddenFileVideoRef.current.pause();\n        hiddenFileVideoRef.current.removeAttribute('src');\n        hiddenFileVideoRef.current.load();\n      }\n    } finally {\n      setStatus('idle');\n    }\n  }, []);\n\n  /** 启动不同模式 */\n  const start = React.useCallback(async () => {\n    setStatus('starting...');\n    await stop(); // 先清理，确保干净状态\n\n    try {\n      if (mode === 'webcam') {\n        // 1) 直接用摄像头\n        const media = await navigator.mediaDevices.getUserMedia({\n          video: {\n            width: {\n              ideal: 1280\n            },\n            height: {\n              ideal: 720\n            }\n          },\n          audio: false\n        });\n        sourceStreamRef.current = media;\n\n        // 预览（可选）\n        if (videoRef.current) {\n          videoRef.current.srcObject = media;\n          await videoRef.current.play().catch(() => {});\n        }\n        setStatus('playing (webcam)');\n        return;\n      }\n      if (mode === 'file') {\n        var _captureStream, _captureStream2, _ref, _mozCaptureStream, _ref2;\n        // 2) 隐藏 video 播放文件 -> captureStream 伪装成实时流\n        const hv = hiddenFileVideoRef.current;\n        hv.src = '/sample.mp4'; // 请在 public/ 放一个小 mp4\n        hv.muted = true; // 避免自动播放限制\n        hv.loop = true;\n        await hv.play().catch(() => {});\n        const captured = (_captureStream = (_captureStream2 = (_ref = hv).captureStream) === null || _captureStream2 === void 0 ? void 0 : _captureStream2.call(_ref)) !== null && _captureStream !== void 0 ? _captureStream : (_mozCaptureStream = (_ref2 = hv).mozCaptureStream) === null || _mozCaptureStream === void 0 ? void 0 : _mozCaptureStream.call(_ref2);\n        if (!captured) throw new Error('captureStream() not supported in this browser.');\n        sourceStreamRef.current = captured;\n        if (videoRef.current) {\n          videoRef.current.srcObject = captured;\n          await videoRef.current.play().catch(() => {});\n        }\n        setStatus('playing (file via captureStream)');\n        return;\n      }\n      if (mode === 'loopback') {\n        var _captureStream3, _captureStream4, _ref3, _mozCaptureStream2, _ref4;\n        // 3) 纯前端 WebRTC loopback（同页两端互连）\n\n        // 3.1 准备媒体源（用文件；也可换成 getUserMedia）\n        const hv = hiddenFileVideoRef.current;\n        hv.src = '/sample.mp4';\n        hv.muted = true;\n        hv.loop = true;\n        await hv.play().catch(() => {});\n        const source = (_captureStream3 = (_captureStream4 = (_ref3 = hv).captureStream) === null || _captureStream4 === void 0 ? void 0 : _captureStream4.call(_ref3)) !== null && _captureStream3 !== void 0 ? _captureStream3 : (_mozCaptureStream2 = (_ref4 = hv).mozCaptureStream) === null || _mozCaptureStream2 === void 0 ? void 0 : _mozCaptureStream2.call(_ref4);\n        if (!source) throw new Error('captureStream() not supported.');\n        sourceStreamRef.current = source;\n\n        // 3.2 建立两个 PeerConnection\n        pc1Ref.current = new RTCPeerConnection({\n          iceServers: [{\n            urls: 'stun:stun.l.google.com:19302'\n          }]\n        });\n        pc2Ref.current = new RTCPeerConnection({\n          iceServers: [{\n            urls: 'stun:stun.l.google.com:19302'\n          }]\n        });\n\n        // 3.3 互换 ICE 候选\n        pc1Ref.current.onicecandidate = e => {\n          var _pc2Ref$current3;\n          if (e.candidate) (_pc2Ref$current3 = pc2Ref.current) === null || _pc2Ref$current3 === void 0 ? void 0 : _pc2Ref$current3.addIceCandidate(e.candidate);\n        };\n        pc2Ref.current.onicecandidate = e => {\n          var _pc1Ref$current3;\n          if (e.candidate) (_pc1Ref$current3 = pc1Ref.current) === null || _pc1Ref$current3 === void 0 ? void 0 : _pc1Ref$current3.addIceCandidate(e.candidate);\n        };\n\n        // 3.4 远端收到媒体 -> 渲染到可见 video\n        pc2Ref.current.ontrack = e => {\n          if (videoRef.current) {\n            videoRef.current.srcObject = e.streams[0];\n            videoRef.current.play().catch(() => {});\n          }\n        };\n\n        // 3.5 发送端添加轨道（窄化类型，确保不为空）\n        const stream = sourceStreamRef.current;\n        const pc1 = pc1Ref.current;\n        const pc2 = pc2Ref.current;\n        assertStream(stream);\n        assertPC(pc1);\n        assertPC(pc2);\n        stream.getTracks().forEach(t => pc1.addTrack(t, stream));\n\n        // 3.6 Offer/Answer（本地直接传 SDP；真实场景走信令服务）\n        const offer = await pc1.createOffer();\n        await pc1.setLocalDescription(offer);\n        await pc2.setRemoteDescription(offer);\n        const answer = await pc2.createAnswer();\n        await pc2.setLocalDescription(answer);\n        await pc1.setRemoteDescription(answer);\n        setStatus('playing (webrtc loopback)');\n        return;\n      }\n    } catch (err) {\n      var _err$message;\n      console.error(err);\n      setStatus(`error: ${(_err$message = err === null || err === void 0 ? void 0 : err.message) !== null && _err$message !== void 0 ? _err$message : String(err)}`);\n    }\n  }, [mode, stop]);\n\n  /** 卸载时清理资源 */\n  React.useEffect(() => {\n    return () => {\n      stop();\n    };\n  }, [stop]);\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: hiddenFileVideoRef,\n      style: {\n        display: 'none'\n      },\n      playsInline: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: \"Live Feed (Simulated)\",\n        subheader: /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          spacing: 1,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: \"Mode:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            size: \"small\",\n            label: mode,\n            color: \"primary\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            size: \"small\",\n            label: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          direction: {\n            xs: 'column',\n            md: 'row'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            sx: {\n              minWidth: 200\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"mode-label\",\n              children: \"Mode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"mode-label\",\n              value: mode,\n              label: \"Mode\",\n              onChange: handleModeChange,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"webcam\",\n                children: \"Webcam (getUserMedia)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"file\",\n                children: \"Sample File (captureStream)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"loopback\",\n                children: \"WebRTC Loopback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: start,\n              children: \"Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: stop,\n              children: \"Stop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: [\"Put a small \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"sample.mp4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 27\n            }, this), \" into \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"public/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 56\n            }, this), \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), \"Webcam requires HTTPS (or \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"localhost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 41\n            }, this), \") and user permission.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2,\n            aspectRatio: '16 / 9',\n            bgcolor: 'black'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            autoPlay: true,\n            playsInline: true,\n            muted: true,\n            style: {\n              width: '100%',\n              height: '100%',\n              objectFit: 'contain'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n}\n_s(LiveFeed, \"ASGVuq2a850uzB0S4MtUf68QSa8=\");\n_c = LiveFeed;\nvar _c;\n$RefreshReg$(_c, \"LiveFeed\");","map":{"version":3,"names":["React","Box","Card","CardContent","CardHeader","FormControl","InputLabel","MenuItem","Select","Stack","Button","Typography","Chip","jsxDEV","_jsxDEV","assertStream","s","Error","assertPC","pc","LiveFeed","_s","mode","setMode","useState","status","setStatus","videoRef","useRef","hiddenFileVideoRef","pc1Ref","pc2Ref","sourceStreamRef","handleModeChange","e","target","value","stop","useCallback","_pc1Ref$current","_pc2Ref$current","_pc1Ref$current2","_pc2Ref$current2","_sourceStreamRef$curr","current","getSenders","forEach","_s$track","track","_s$track2","close","getTracks","t","pause","srcObject","removeAttribute","load","start","media","navigator","mediaDevices","getUserMedia","video","width","ideal","height","audio","play","catch","_captureStream","_captureStream2","_ref","_mozCaptureStream","_ref2","hv","src","muted","loop","captured","captureStream","call","mozCaptureStream","_captureStream3","_captureStream4","_ref3","_mozCaptureStream2","_ref4","source","RTCPeerConnection","iceServers","urls","onicecandidate","_pc2Ref$current3","candidate","addIceCandidate","_pc1Ref$current3","ontrack","streams","stream","pc1","pc2","addTrack","offer","createOffer","setLocalDescription","setRemoteDescription","answer","createAnswer","err","_err$message","console","error","message","String","useEffect","spacing","children","ref","style","display","playsInline","fileName","_jsxFileName","lineNumber","columnNumber","title","subheader","direction","alignItems","variant","color","size","label","xs","md","sx","minWidth","id","labelId","onChange","onClick","mt","aspectRatio","bgcolor","autoPlay","objectFit","_c","$RefreshReg$"],"sources":["C:/Users/tamak/Desktop/Workspace/ppe-watcher/src/pages/Dashboard/LiveFeed/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Stack,\n  Button,\n  Typography,\n  Chip,\n} from '@mui/material';\n\n/** 三种模拟方式 */\ntype Mode = 'webcam' | 'file' | 'loopback';\n\n/** 小工具：类型断言（更安全地通过 TS 检查） */\nfunction assertStream(s: MediaStream | null): asserts s is MediaStream {\n  if (!s) throw new Error('MediaStream is null (source stream not ready).');\n}\nfunction assertPC(pc: RTCPeerConnection | null): asserts pc is RTCPeerConnection {\n  if (!pc) throw new Error('PeerConnection is null (pc not ready).');\n}\n\nexport default function LiveFeed(): React.ReactElement {\n  const [mode, setMode] = React.useState<Mode>('webcam');\n  const [status, setStatus] = React.useState<string>('idle');\n\n  /** 可见的视频（渲染本地/远端） */\n  const videoRef = React.useRef<HTMLVideoElement | null>(null);\n  /** 隐藏的视频（用于 captureStream） */\n  const hiddenFileVideoRef = React.useRef<HTMLVideoElement | null>(null);\n\n  /** WebRTC 相关 */\n  const pc1Ref = React.useRef<RTCPeerConnection | null>(null); // 发送端\n  const pc2Ref = React.useRef<RTCPeerConnection | null>(null); // 接收端\n  const sourceStreamRef = React.useRef<MediaStream | null>(null); // 媒体源\n\n  const handleModeChange = (e: SelectChangeEvent) => {\n    setMode(e.target.value as Mode);\n  };\n\n  /** 停止当前所有资源（流/连接/视频） */\n  const stop = React.useCallback(async () => {\n    try {\n      // 关闭 PeerConnection & 轨道\n      pc1Ref.current?.getSenders().forEach((s) => s.track?.stop());\n      pc2Ref.current?.getSenders().forEach((s) => s.track?.stop());\n      pc1Ref.current?.close();\n      pc2Ref.current?.close();\n      pc1Ref.current = null;\n      pc2Ref.current = null;\n\n      // 停止源流\n      sourceStreamRef.current?.getTracks().forEach((t) => t.stop());\n      sourceStreamRef.current = null;\n\n      // 停止可见 video\n      if (videoRef.current) {\n        videoRef.current.pause();\n        (videoRef.current as any).srcObject = null;\n        videoRef.current.removeAttribute('src');\n        videoRef.current.load();\n      }\n\n      // 停止隐藏 video\n      if (hiddenFileVideoRef.current) {\n        hiddenFileVideoRef.current.pause();\n        hiddenFileVideoRef.current.removeAttribute('src');\n        hiddenFileVideoRef.current.load();\n      }\n    } finally {\n      setStatus('idle');\n    }\n  }, []);\n\n  /** 启动不同模式 */\n  const start = React.useCallback(async () => {\n    setStatus('starting...');\n    await stop(); // 先清理，确保干净状态\n\n    try {\n      if (mode === 'webcam') {\n        // 1) 直接用摄像头\n        const media = await navigator.mediaDevices.getUserMedia({\n          video: { width: { ideal: 1280 }, height: { ideal: 720 } },\n          audio: false,\n        });\n        sourceStreamRef.current = media;\n\n        // 预览（可选）\n        if (videoRef.current) {\n          (videoRef.current as any).srcObject = media;\n          await videoRef.current.play().catch(() => {});\n        }\n\n        setStatus('playing (webcam)');\n        return;\n      }\n\n      if (mode === 'file') {\n        // 2) 隐藏 video 播放文件 -> captureStream 伪装成实时流\n        const hv = hiddenFileVideoRef.current!;\n        hv.src = '/sample.mp4'; // 请在 public/ 放一个小 mp4\n        hv.muted = true; // 避免自动播放限制\n        hv.loop = true;\n        await hv.play().catch(() => {});\n\n        const captured: MediaStream | undefined =\n          (hv as any).captureStream?.() ?? (hv as any).mozCaptureStream?.();\n\n        if (!captured) throw new Error('captureStream() not supported in this browser.');\n        sourceStreamRef.current = captured;\n\n        if (videoRef.current) {\n          (videoRef.current as any).srcObject = captured;\n          await videoRef.current.play().catch(() => {});\n        }\n\n        setStatus('playing (file via captureStream)');\n        return;\n      }\n\n      if (mode === 'loopback') {\n        // 3) 纯前端 WebRTC loopback（同页两端互连）\n\n        // 3.1 准备媒体源（用文件；也可换成 getUserMedia）\n        const hv = hiddenFileVideoRef.current!;\n        hv.src = '/sample.mp4';\n        hv.muted = true;\n        hv.loop = true;\n        await hv.play().catch(() => {});\n        const source = (hv as any).captureStream?.() ?? (hv as any).mozCaptureStream?.();\n        if (!source) throw new Error('captureStream() not supported.');\n        sourceStreamRef.current = source;\n\n        // 3.2 建立两个 PeerConnection\n        pc1Ref.current = new RTCPeerConnection({\n          iceServers: [{ urls: 'stun:stun.l.google.com:19302' }],\n        });\n        pc2Ref.current = new RTCPeerConnection({\n          iceServers: [{ urls: 'stun:stun.l.google.com:19302' }],\n        });\n\n        // 3.3 互换 ICE 候选\n        pc1Ref.current.onicecandidate = (e) => {\n          if (e.candidate) pc2Ref.current?.addIceCandidate(e.candidate);\n        };\n        pc2Ref.current.onicecandidate = (e) => {\n          if (e.candidate) pc1Ref.current?.addIceCandidate(e.candidate);\n        };\n\n        // 3.4 远端收到媒体 -> 渲染到可见 video\n        pc2Ref.current.ontrack = (e) => {\n          if (videoRef.current) {\n            (videoRef.current as any).srcObject = e.streams[0];\n            videoRef.current.play().catch(() => {});\n          }\n        };\n\n        // 3.5 发送端添加轨道（窄化类型，确保不为空）\n        const stream = sourceStreamRef.current;\n        const pc1 = pc1Ref.current;\n        const pc2 = pc2Ref.current;\n        assertStream(stream);\n        assertPC(pc1);\n        assertPC(pc2);\n\n        stream.getTracks().forEach((t) => pc1.addTrack(t, stream));\n\n        // 3.6 Offer/Answer（本地直接传 SDP；真实场景走信令服务）\n        const offer = await pc1.createOffer();\n        await pc1.setLocalDescription(offer);\n        await pc2.setRemoteDescription(offer);\n\n        const answer = await pc2.createAnswer();\n        await pc2.setLocalDescription(answer);\n        await pc1.setRemoteDescription(answer);\n\n        setStatus('playing (webrtc loopback)');\n        return;\n      }\n    } catch (err: any) {\n      console.error(err);\n      setStatus(`error: ${err?.message ?? String(err)}`);\n    }\n  }, [mode, stop]);\n\n  /** 卸载时清理资源 */\n  React.useEffect(() => {\n    return () => {\n      stop();\n    };\n  }, [stop]);\n\n  return (\n    <Stack spacing={2}>\n      {/* 隐藏视频：用于 file / loopback captureStream 源 */}\n      <video ref={hiddenFileVideoRef} style={{ display: 'none' }} playsInline />\n\n      <Card>\n        <CardHeader\n          title=\"Live Feed (Simulated)\"\n          subheader={\n            <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Mode:\n              </Typography>\n              <Chip size=\"small\" label={mode} color=\"primary\" variant=\"outlined\" />\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Status:\n              </Typography>\n              <Chip size=\"small\" label={status} />\n            </Stack>\n          }\n        />\n        <CardContent>\n          <Stack spacing={2} direction={{ xs: 'column', md: 'row' }}>\n            <FormControl sx={{ minWidth: 200 }}>\n              <InputLabel id=\"mode-label\">Mode</InputLabel>\n              <Select labelId=\"mode-label\" value={mode} label=\"Mode\" onChange={handleModeChange}>\n                <MenuItem value=\"webcam\">Webcam (getUserMedia)</MenuItem>\n                <MenuItem value=\"file\">Sample File (captureStream)</MenuItem>\n                <MenuItem value=\"loopback\">WebRTC Loopback</MenuItem>\n              </Select>\n            </FormControl>\n\n            <Stack direction=\"row\" spacing={1}>\n              <Button variant=\"contained\" onClick={start}>\n                Start\n              </Button>\n              <Button variant=\"outlined\" onClick={stop}>\n                Stop\n              </Button>\n            </Stack>\n          </Stack>\n\n          <Box sx={{ mt: 2 }}>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Put a small <code>sample.mp4</code> into <code>public/</code>.\n              <br />\n              Webcam requires HTTPS (or <code>localhost</code>) and user permission.\n            </Typography>\n          </Box>\n\n          {/* 16:9 预览区域 */}\n          <Box sx={{ mt: 2, aspectRatio: '16 / 9', bgcolor: 'black' }}>\n            <video\n              ref={videoRef}\n              autoPlay\n              playsInline\n              muted\n              style={{ width: '100%', height: '100%', objectFit: 'contain' }}\n            />\n          </Box>\n        </CardContent>\n      </Card>\n    </Stack>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}