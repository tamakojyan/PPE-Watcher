{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tamak\\\\Desktop\\\\Workspace\\\\ppe-watcher\\\\src\\\\pages\\\\Dashboard\\\\Alerts\\\\index.tsx\";\nimport { Stack, Grid, Typography, Paper, Card, CardContent } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stats = [{\n  label: 'Open',\n  value: 1\n}, {\n  label: 'Resolved',\n  value: 1\n}, {\n  label: 'Total',\n  value: 2\n}];\nexport default function Alerts() {\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    spacing: 2,\n    sx: {\n      bgcolor: 'background.paper',\n      minHeight: 0,\n      flex: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      size: {\n        xs: 12\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Alerts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      size: {\n        xs: 12\n      },\n      sx: {\n        color: 'primary.main'\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: stats.map(s => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              p: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Stack, {\n                direction: \"row\",\n                alignItems: \"center\",\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  children: s.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  color: \"primary\",\n                  fontWeight: \"bold\",\n                  children: s.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 21\n                }, this), s.icon]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, s.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      size: {\n        xs: 12\n      },\n      sx: {\n        flex: 1,\n        minHeight: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        sx: {\n          height: '100%',\n          minHeight: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          size: {\n            xs: 12,\n            sm: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              height: '100%'\n            },\n            children: \"List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          size: {\n            xs: 12,\n            sm: 9\n          },\n          sx: {\n            minHeight: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            sx: {\n              height: '100%',\n              minHeight: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(Stack, {\n              sx: {\n                flex: 8,\n                borderBottom: '1px solid',\n                borderColor: 'grey'\n              },\n              children: \"ScreenShot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              sx: {\n                flex: 4\n              },\n              children: \"Table\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c = Alerts;\nvar _c;\n$RefreshReg$(_c, \"Alerts\");","map":{"version":3,"names":["Stack","Grid","Typography","Paper","Card","CardContent","jsxDEV","_jsxDEV","stats","label","value","Alerts","container","direction","spacing","sx","bgcolor","minHeight","flex","children","size","xs","variant","fileName","_jsxFileName","lineNumber","columnNumber","color","map","s","item","sm","p","alignItems","fontWeight","icon","height","borderBottom","borderColor","_c","$RefreshReg$"],"sources":["C:/Users/tamak/Desktop/Workspace/ppe-watcher/src/pages/Dashboard/Alerts/index.tsx"],"sourcesContent":["import * as react from 'react';\nimport {\n  Stack,\n  Grid,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  Button,\n  Paper,\n  Box,\n  Divider,\n  Card,\n  CardContent,\n} from '@mui/material';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport ListAltIcon from '@mui/icons-material/ListAlt';\n\nconst stats = [\n  { label: 'Open', value: 1 },\n  { label: 'Resolved', value: 1 },\n  { label: 'Total', value: 2 },\n];\n\nexport default function Alerts(): React.ReactElement {\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      spacing={2}\n      sx={{ bgcolor: 'background.paper', minHeight: 0, flex: 1 }}\n    >\n      <Grid size={{ xs: 12 }}>\n        <Typography variant=\"h6\">Alerts</Typography>\n      </Grid>\n\n      <Grid size={{ xs: 12 }} sx={{ color: 'primary.main' }}>\n        <Grid container spacing={2}>\n          {stats.map((s) => (\n            <Grid item xs={12} sm={4} key={s.label}>\n              <Card sx={{ p: 1 }}>\n                <CardContent>\n                  <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                    <Typography variant=\"subtitle1\">{s.label}</Typography>\n                    <Typography variant=\"h5\" color=\"primary\" fontWeight=\"bold\">\n                      {s.value}\n                    </Typography>\n                    {s.icon}\n                  </Stack>\n                </CardContent>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n\n      <Grid size={{ xs: 12 }} sx={{ flex: 1, minHeight: 0 }}>\n        <Grid container sx={{ height: '100%', minHeight: 0 }}>\n          <Grid size={{ xs: 12, sm: 3 }}>\n            <Paper sx={{ height: '100%' }}>List</Paper>\n          </Grid>\n          <Grid size={{ xs: 12, sm: 9 }} sx={{ minHeight: 0 }}>\n            <Stack sx={{ height: '100%', minHeight: 0 }}>\n              <Stack sx={{ flex: 8, borderBottom: '1px solid', borderColor: 'grey' }}>\n                ScreenShot\n              </Stack>\n              <Stack sx={{ flex: 4 }}>Table</Stack>\n            </Stack>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}